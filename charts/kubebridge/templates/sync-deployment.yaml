apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubebridge-sync
  labels:
    {{- include "kubebridge.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.sync.autoscaling.enabled }}
  replicas: {{ .Values.sync.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kubebridge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.sync.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubebridge.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.sync.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: kubebridge-sync-sa
      securityContext:
        {{- toYaml .Values.sync.podSecurityContext | nindent 8 }}
      containers:
        - name: kubebridge-sync
          securityContext:
            {{- toYaml .Values.sync.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.sync.imagePullPolicy }}
          env:
            - name: APP_NAME
              value: sync
            - name: LOG_LEVEL
              value: {{ .Values.global.logLevel }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ .Release.Name }}-redis-master
            - name: REDIS_PORT
              value: {{ .Values.redis.master.service.ports.redis | quote }}
            {{- end }}
            {{- if and .Values.redis.auth.enabled .Values.redis.auth.generatePassword }}
            - name: REDIS_USER
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            {{- end }}
            - name: K8S_SERVICE_SYNC_INTERVAL
              value: {{ .Values.sync.k8sServiceSyncIntervalSeconds | quote }}
            - name: ALLOW_NAMESPACES
              value: '{{ .Values.sync.allowNamespaces | toJson }}'
            - name: DENY_NAMESPACES
              value: '{{ .Values.sync.denyNamespaces | toJson }}'
            - name: ALLOW_SERVICE_TYPES
              value: '{{ .Values.sync.allowServiceTypes | toJson }}'
          resources:
            {{- toYaml .Values.sync.resources | nindent 12 }}
      {{- with .Values.sync.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sync.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sync.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
